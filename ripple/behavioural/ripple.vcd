$date
	Fri Feb  9 11:24:51 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RCA_TB $end
$var wire 5 ! add [4:0] $end
$var wire 4 " S [3:0] $end
$var wire 4 # Cout [3:0] $end
$var reg 4 $ A [3:0] $end
$var reg 4 % B [3:0] $end
$var reg 1 & Cin $end
$upscope $end
$scope module RCA_TB $end
$scope module rca $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 1 & Cin $end
$var wire 4 ) S [3:0] $end
$var wire 4 * Cout [3:0] $end
$scope begin gen_loop[1] $end
$scope module fa $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - cin $end
$var wire 1 . sum $end
$var wire 1 / cout $end
$upscope $end
$upscope $end
$scope begin gen_loop[2] $end
$scope module fa $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 cin $end
$var wire 1 3 sum $end
$var wire 1 4 cout $end
$upscope $end
$upscope $end
$scope begin gen_loop[3] $end
$scope module fa $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 cin $end
$var wire 1 8 sum $end
$var wire 1 9 cout $end
$upscope $end
$upscope $end
$scope module fa0 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 & cin $end
$var wire 1 < sum $end
$var wire 1 = cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0=
1<
0;
1:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
b0 *
b1 )
b0 (
b1 '
0&
b0 %
b1 $
b0 #
b1 "
b1 !
$end
#3
13
1.
b111 !
b111 "
b111 )
1<
11
1+
0:
1&
b100 %
b100 (
b10 $
b10 '
#6
19
17
14
03
12
b1110 #
b1110 *
1/
0.
08
b10001 !
b1 "
b1 )
1<
1,
15
1:
0&
b110 %
b110 (
b1011 $
b1011 '
#9
17
14
03
12
1/
1-
0.
18
09
b111 #
b111 *
1=
b1001 !
b1001 "
b1001 )
1<
01
1;
0+
10
05
1&
b11 %
b11 (
b101 $
b101 '
#12
